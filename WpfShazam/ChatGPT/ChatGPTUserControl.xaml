<UserControl x:Class="WpfShazam.ChatGPT.ChatGPTUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="http://schemas.modernwpf.com/2019"             
             xmlns:main="clr-namespace:WpfShazam.Main"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid FocusManager.FocusedElement="{Binding ElementName=ChatInputTextBox}">
        <!-- Header section -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="45"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--Without MaxWidth, the right colmn could be hidden when left column stretched-->
            <ColumnDefinition Width="240" MinWidth="200" MaxWidth="400" />
            <ColumnDefinition Width="*" MinWidth="100" />
        </Grid.ColumnDefinitions>

        <!--Top app bar area-->
        <Border Grid.Row="0" Grid.ColumnSpan="2" BorderThickness="0" IsEnabled="{Binding IsCommandNotBusy}" >
            <ui:SimpleStackPanel Orientation="Horizontal" Background="#19000000">
                <Button Content="New Chat" Command="{Binding NewChatCommand}" Style="{DynamicResource AccentButtonStyle}"
                        Height="36" FontSize="20" Padding="10,0,10,3" Margin="10,15" />
                <CheckBox Content="Streaming Mode" ToolTip="Streaming Mode: return a piece at a time" 
                      IsChecked="{Binding IsStreamingMode}" FontWeight="SemiBold" VerticalAlignment="Top" Margin="15,15,0,0" />
                <ui:AppBarSeparator Margin="0,10,0,0" />
                <TextBlock Text="See Settings tab for getting your OpenAI API key" FontSize="18" Margin="0,18,0,0" />
            </ui:SimpleStackPanel>
        </Border>

        <!--Chat list-->
        <ui:ListView x:Name="ChatListView" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsCommandNotBusy}"
                    ItemsSource="{Binding ChatList}" SelectedItem="{Binding SelectedChat}"
                    Background="Black" BorderBrush="LightGray" BorderThickness="0,1" SelectionMode="Single" 
                    ScrollViewer.IsDeferredScrollingEnabled="False" ScrollViewer.CanContentScroll="True"
                    Margin="0,0,0,2">
            <ui:ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="Background" Value="#FF0078D4" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,5">
                        <TextBlock Text="{Binding Name, Mode=OneWay}" TextWrapping="Wrap" FontSize="18" 
                                Foreground="White" Margin="5,5,0,5" />
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>
        <!--Selected chat's message list-->
        <!--Without VirtualizingPanel.ScrollUnit="Pixel", the last row doesn't seem to be fully visible-->
        <ui:ListView x:Name="MessageListView" Grid.Row="1" Grid.Column="1"
                    ItemsSource="{Binding SelectedChat.MessageList}" AlternationCount="2"
                    Background="#08000000" BorderBrush="LightGray" BorderThickness="0,1" SelectionMode="Single" 
                    ScrollViewer.IsDeferredScrollingEnabled="False" ScrollViewer.CanContentScroll="True" 
                    VirtualizingPanel.ScrollUnit="Pixel" Margin="0,2,2,2">
            <ui:ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem">
                    <!--Disable selection: https://stackoverflow.com/questions/1051215/wpf-listview-turn-off-selection-->
                    <Setter Property="Focusable" Value="False"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        <!--RichTextBox Background="Transparent" below needed to look smooth-->
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#0F000000"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <!--Need Grid (not StackPanel) for TextBlock to wrap-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel>
                            <TextBlock Text="{Binding Sender}" FontSize="16" FontWeight="Bold" 
                                       VerticalAlignment="Top" Margin="0,8,0,5" />
                        </StackPanel>
                        <!--RichTextBox allows copying selection in the RichTextBox control-->
                        <RichTextBox Grid.Column="1" Background="Transparent" BorderThickness="0" IsReadOnly="True" Margin="0,0,5,2">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Text}" FontSize="20" FontWeight="Normal"/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>

        <!--Vertical splitter between the 2 lists-->
        <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="6" 
                Background="LightGray" Margin="0,0,0,2"/>

        <!--Chat input and current result-->
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!--#08000000 ligher than #19000000-->
            <!--AcceptsReturn="True" needed for Paste from clipboard, MaxHeight for height limit-->
            <TextBox x:Name="ChatInputTextBox" SpellCheck.IsEnabled="True" IsEnabled="{Binding IsCommandNotBusy}"
                    Text="{Binding ChatInput, UpdateSourceTrigger=PropertyChanged}"                         
                    TextWrapping="Wrap" MaxHeight="170" VerticalScrollBarVisibility="Auto" AcceptsReturn="False"
                    VerticalAlignment="Stretch" Background="#08000000" FontSize="20" 
                    Padding="7,2,0,5" Margin="12,7,10,10">
                <TextBox.InputBindings>
                    <!--Now Enter to Send-->
                    <KeyBinding Key="Enter" Command="{Binding SendCommand}" />
                    <KeyBinding Key="Esc" Command="{Binding ClearChatInputCommand}" />
                </TextBox.InputBindings>
                <TextBox.CaretBrush>
                    <LinearGradientBrush MappingMode="RelativeToBoundingBox"
                                StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#990078D4" Offset="0" />
                            <GradientStop Color="#990078D4" Offset="0.5" />
                            <GradientStop Color="#990078D4" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </TextBox.CaretBrush>
            </TextBox>

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Content="Send" ToolTip="Enter is the same as Send" 
                    Command="{Binding SendCommand}" Style="{DynamicResource AccentButtonStyle}"
                    Height="36" FontSize="20" Padding="10,0,10,3" Margin="3,0,12,2" />
            </StackPanel>
        </Grid>
        <main:StatusBarUserControl x:Name="StatusBar" Grid.Row="3" Grid.ColumnSpan="2" />
    </Grid>
</UserControl>
